#!/usr/bin/env python3
"""
Copyright (C) 2022 Torbjorn Hedqvist
All Rights Reserved You may use, distribute and modify this code under the
terms of the MIT license. See LICENSE file in the project root for full
license information.

Collect all static settings in the calendar in one function.

"""
import xlsxwriter
from util.config import Config
from util.cell_format import CellFormat

def set_static_layout(workbook: xlsxwriter.Workbook, conf: Config, cform: CellFormat):
    """
    Create all static worksheet layout settings.
    """
    worksheet = workbook.get_worksheet_by_name(conf.worksheet_name)
    worksheet.set_tab_color(conf.worksheet_tab_color)
    worksheet.freeze_panes(0, 1) # Freeze the first column.

    # Add start and end dates to the worksheet top left corner
    worksheet.write(0, 0, f"Start date: {conf.start_date.strftime('%Y-%m-%d')}",
                    cform.bold_italic)
    worksheet.write(1, 0, f"End date: {conf.end_date.strftime('%Y-%m-%d')}",
                    cform.bold_italic)

    # Set the column width for the first content column
    worksheet.set_column(conf.start_col - 1, conf.start_col - 1, conf.content_col_size)

    total_days = (conf.end_date - conf.start_date).days + 1 # +1 to include the last day

    # set the column width for all days in the calendar
    worksheet.set_column(conf.start_col, total_days, 2.36)

    # Create the border and center aligned grid for all day cells in the calendar
    for row in range(conf.content_num_rows):
        for col in range(conf.start_col, total_days + 1):
            worksheet.write((row + conf.day_row + 1), col, '', cform.border_center)

    # Add the marketing info with links to the project at github.
    italic_grey = workbook.add_format({'italic': True, 'font_color': '#595959'})
    italic_white = workbook.add_format({'italic': True, 'font_color': '#ffffff'})
    message = 'Generated by xlsxcalendar.py (https://github.com/torbjornhedqvist/xlsxcalendar)'
    worksheet.write(conf.year_row - 1, conf.start_col, message, italic_grey)
    worksheet.write(conf.year_row - 1, conf.start_col + total_days + 20, message, italic_white)

    # Add the input for the content column
    worksheet.write(conf.day_row, conf.start_col - 1, conf.content_heading,
                    cform.content_heading)
    if len(conf.content_entries) > 0:
        incr_row = conf.day_row + 1
        for entry in conf.content_entries:
            worksheet.write(incr_row, conf.start_col - 1, entry, cform.border)
            incr_row += 1
    else: # Create default empty rows
        for row in range(conf.content_num_rows):
            worksheet.write(row + (conf.day_row + 1), conf.start_col - 1, '', cform.border)
